// Code generated by protoc-gen-go.
// source: wire.proto
// DO NOT EDIT!

/*
Package main is a generated protocol buffer package.

It is generated from these files:
	wire.proto

It has these top-level messages:
	Login
	Contact
	Text
	File
	Av
	Store
	Load
	Haber
*/
package main

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// Identifies which field is filled in
type Haber_Which int32

const (
	Haber_LOGIN    Haber_Which = 0
	Haber_CONTACTS Haber_Which = 1
	Haber_PRESENCE Haber_Which = 2
	Haber_TEXT     Haber_Which = 3
	Haber_FILE     Haber_Which = 4
	Haber_AV       Haber_Which = 5
	Haber_STORE    Haber_Which = 6
	Haber_LOAD     Haber_Which = 7
)

var Haber_Which_name = map[int32]string{
	0: "LOGIN",
	1: "CONTACTS",
	2: "PRESENCE",
	3: "TEXT",
	4: "FILE",
	5: "AV",
	6: "STORE",
	7: "LOAD",
}
var Haber_Which_value = map[string]int32{
	"LOGIN":    0,
	"CONTACTS": 1,
	"PRESENCE": 2,
	"TEXT":     3,
	"FILE":     4,
	"AV":       5,
	"STORE":    6,
	"LOAD":     7,
}

func (x Haber_Which) String() string {
	return proto.EnumName(Haber_Which_name, int32(x))
}
func (Haber_Which) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{7, 0} }

type Login struct {
	Username string `protobuf:"bytes,1,opt,name=username" json:"username,omitempty"`
}

func (m *Login) Reset()                    { *m = Login{} }
func (m *Login) String() string            { return proto.CompactTextString(m) }
func (*Login) ProtoMessage()               {}
func (*Login) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Login) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

type Contact struct {
	Name   string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Online bool   `protobuf:"varint,2,opt,name=online" json:"online,omitempty"`
}

func (m *Contact) Reset()                    { *m = Contact{} }
func (m *Contact) String() string            { return proto.CompactTextString(m) }
func (*Contact) ProtoMessage()               {}
func (*Contact) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Contact) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Contact) GetOnline() bool {
	if m != nil {
		return m.Online
	}
	return false
}

type Text struct {
	Body string `protobuf:"bytes,1,opt,name=body" json:"body,omitempty"`
}

func (m *Text) Reset()                    { *m = Text{} }
func (m *Text) String() string            { return proto.CompactTextString(m) }
func (*Text) ProtoMessage()               {}
func (*Text) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *Text) GetBody() string {
	if m != nil {
		return m.Body
	}
	return ""
}

type File struct {
	Key  string `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	Data []byte `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (m *File) Reset()                    { *m = File{} }
func (m *File) String() string            { return proto.CompactTextString(m) }
func (*File) ProtoMessage()               {}
func (*File) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *File) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *File) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type Av struct {
	Data []byte `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (m *Av) Reset()                    { *m = Av{} }
func (m *Av) String() string            { return proto.CompactTextString(m) }
func (*Av) ProtoMessage()               {}
func (*Av) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *Av) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type Store struct {
	Key   []byte `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value []byte `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (m *Store) Reset()                    { *m = Store{} }
func (m *Store) String() string            { return proto.CompactTextString(m) }
func (*Store) ProtoMessage()               {}
func (*Store) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *Store) GetKey() []byte {
	if m != nil {
		return m.Key
	}
	return nil
}

func (m *Store) GetValue() []byte {
	if m != nil {
		return m.Value
	}
	return nil
}

type Load struct {
	Key []byte `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
}

func (m *Load) Reset()                    { *m = Load{} }
func (m *Load) String() string            { return proto.CompactTextString(m) }
func (*Load) ProtoMessage()               {}
func (*Load) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *Load) GetKey() []byte {
	if m != nil {
		return m.Key
	}
	return nil
}

type Haber struct {
	Version   uint32      `protobuf:"varint,1,opt,name=version" json:"version,omitempty"`
	SessionId string      `protobuf:"bytes,2,opt,name=sessionId" json:"sessionId,omitempty"`
	From      string      `protobuf:"bytes,3,opt,name=from" json:"from,omitempty"`
	To        string      `protobuf:"bytes,4,opt,name=to" json:"to,omitempty"`
	Which     Haber_Which `protobuf:"varint,5,opt,name=which,enum=Haber_Which" json:"which,omitempty"`
	// One of the following will be filled in
	Login    *Login     `protobuf:"bytes,101,opt,name=login" json:"login,omitempty"`
	Contacts []*Contact `protobuf:"bytes,102,rep,name=contacts" json:"contacts,omitempty"`
	Text     *Text      `protobuf:"bytes,104,opt,name=text" json:"text,omitempty"`
	Av       *Av        `protobuf:"bytes,105,opt,name=av" json:"av,omitempty"`
	File     *File      `protobuf:"bytes,106,opt,name=file" json:"file,omitempty"`
	Store    *Store     `protobuf:"bytes,107,opt,name=store" json:"store,omitempty"`
	Load     *Load      `protobuf:"bytes,108,opt,name=load" json:"load,omitempty"`
	Raw      [][]byte   `protobuf:"bytes,109,rep,name=raw,proto3" json:"raw,omitempty"`
}

func (m *Haber) Reset()                    { *m = Haber{} }
func (m *Haber) String() string            { return proto.CompactTextString(m) }
func (*Haber) ProtoMessage()               {}
func (*Haber) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *Haber) GetVersion() uint32 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *Haber) GetSessionId() string {
	if m != nil {
		return m.SessionId
	}
	return ""
}

func (m *Haber) GetFrom() string {
	if m != nil {
		return m.From
	}
	return ""
}

func (m *Haber) GetTo() string {
	if m != nil {
		return m.To
	}
	return ""
}

func (m *Haber) GetWhich() Haber_Which {
	if m != nil {
		return m.Which
	}
	return Haber_LOGIN
}

func (m *Haber) GetLogin() *Login {
	if m != nil {
		return m.Login
	}
	return nil
}

func (m *Haber) GetContacts() []*Contact {
	if m != nil {
		return m.Contacts
	}
	return nil
}

func (m *Haber) GetText() *Text {
	if m != nil {
		return m.Text
	}
	return nil
}

func (m *Haber) GetAv() *Av {
	if m != nil {
		return m.Av
	}
	return nil
}

func (m *Haber) GetFile() *File {
	if m != nil {
		return m.File
	}
	return nil
}

func (m *Haber) GetStore() *Store {
	if m != nil {
		return m.Store
	}
	return nil
}

func (m *Haber) GetLoad() *Load {
	if m != nil {
		return m.Load
	}
	return nil
}

func (m *Haber) GetRaw() [][]byte {
	if m != nil {
		return m.Raw
	}
	return nil
}

func init() {
	proto.RegisterType((*Login)(nil), "Login")
	proto.RegisterType((*Contact)(nil), "Contact")
	proto.RegisterType((*Text)(nil), "Text")
	proto.RegisterType((*File)(nil), "File")
	proto.RegisterType((*Av)(nil), "Av")
	proto.RegisterType((*Store)(nil), "Store")
	proto.RegisterType((*Load)(nil), "Load")
	proto.RegisterType((*Haber)(nil), "Haber")
	proto.RegisterEnum("Haber_Which", Haber_Which_name, Haber_Which_value)
}

func init() { proto.RegisterFile("wire.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 500 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x64, 0x52, 0xef, 0x8a, 0xd3, 0x4e,
	0x14, 0xfd, 0xe5, 0xcf, 0x74, 0xd3, 0xbb, 0xfd, 0x2d, 0x61, 0x14, 0x19, 0x97, 0x05, 0x43, 0x14,
	0xec, 0x07, 0x89, 0x50, 0xf1, 0x01, 0x6a, 0xcd, 0x6a, 0xa1, 0xb4, 0x32, 0x0d, 0x2a, 0x7e, 0x59,
	0xa6, 0xcd, 0x74, 0x1b, 0x37, 0xcd, 0xc8, 0x64, 0x9a, 0xae, 0xaf, 0xe7, 0x93, 0xc9, 0x9d, 0xa4,
	0x75, 0xc5, 0x6f, 0xe7, 0x9e, 0x73, 0xef, 0xc9, 0x9d, 0x7b, 0x02, 0x70, 0x28, 0xb4, 0x4c, 0x7e,
	0x68, 0x65, 0x54, 0xfc, 0x1c, 0xc8, 0x4c, 0xdd, 0x16, 0x15, 0xbd, 0x84, 0x60, 0x5f, 0x4b, 0x5d,
	0x89, 0x9d, 0x64, 0x4e, 0xe4, 0x0c, 0xfb, 0xfc, 0x54, 0xc7, 0x6f, 0xe1, 0x6c, 0xa2, 0x2a, 0x23,
	0xd6, 0x86, 0x52, 0xf0, 0x1f, 0xb4, 0x58, 0x4c, 0x9f, 0x40, 0x4f, 0x55, 0x65, 0x51, 0x49, 0xe6,
	0x46, 0xce, 0x30, 0xe0, 0x5d, 0x15, 0x5f, 0x82, 0x9f, 0xc9, 0x7b, 0x3b, 0xb3, 0x52, 0xf9, 0xcf,
	0xe3, 0x0c, 0xe2, 0xf8, 0x15, 0xf8, 0xd7, 0x45, 0x29, 0x69, 0x08, 0xde, 0x9d, 0x3c, 0x4a, 0x08,
	0xb1, 0x3b, 0x17, 0x46, 0x58, 0xaf, 0x01, 0xb7, 0x38, 0x66, 0xe0, 0x8e, 0x9b, 0x93, 0xe2, 0x3c,
	0x50, 0x5e, 0x03, 0x59, 0x1a, 0xa5, 0xff, 0x32, 0x1a, 0xb4, 0x46, 0x8f, 0x81, 0x34, 0xa2, 0xdc,
	0xcb, 0xce, 0xa9, 0x2d, 0x62, 0x06, 0xfe, 0x4c, 0x89, 0xfc, 0xdf, 0xfe, 0xf8, 0x97, 0x07, 0xe4,
	0xa3, 0x58, 0x49, 0x4d, 0x19, 0x9c, 0x35, 0x52, 0xd7, 0x85, 0xaa, 0xac, 0xfe, 0x3f, 0x3f, 0x96,
	0xf4, 0x0a, 0xfa, 0xb5, 0xac, 0x11, 0x4e, 0x73, 0xeb, 0xdb, 0xe7, 0x7f, 0x08, 0x5c, 0x70, 0xa3,
	0xd5, 0x8e, 0x79, 0xed, 0x43, 0x11, 0xd3, 0x0b, 0x70, 0x8d, 0x62, 0xbe, 0x65, 0x5c, 0xa3, 0x68,
	0x0c, 0xe4, 0xb0, 0x2d, 0xd6, 0x5b, 0x46, 0x22, 0x67, 0x78, 0x31, 0x1a, 0x24, 0xf6, 0x93, 0xc9,
	0x17, 0xe4, 0x78, 0x2b, 0xd1, 0x2b, 0x20, 0x25, 0x86, 0xc2, 0x64, 0xe4, 0x0c, 0xcf, 0x47, 0xbd,
	0xc4, 0x46, 0xc4, 0x5b, 0x92, 0xbe, 0x80, 0x60, 0xdd, 0xa6, 0x51, 0xb3, 0x4d, 0xe4, 0x0d, 0xcf,
	0x47, 0x41, 0xd2, 0xc5, 0xc3, 0x4f, 0x0a, 0x7d, 0x0a, 0xbe, 0x91, 0xf7, 0x86, 0x6d, 0xad, 0x05,
	0x49, 0x30, 0x09, 0x6e, 0x29, 0xfa, 0x08, 0x5c, 0xd1, 0xb0, 0xc2, 0x0a, 0x5e, 0x32, 0x6e, 0xb8,
	0x2b, 0x1a, 0xec, 0xdf, 0x14, 0xa5, 0x64, 0xdf, 0xbb, 0x7e, 0x4c, 0x87, 0x5b, 0x0a, 0xd7, 0xa9,
	0xf1, 0xc6, 0xec, 0xae, 0x5b, 0xc7, 0x5e, 0x9c, 0xb7, 0x24, 0x0e, 0x96, 0x4a, 0xe4, 0xac, 0xec,
	0x06, 0xf1, 0xba, 0xdc, 0x52, 0x78, 0x63, 0x2d, 0x0e, 0x6c, 0x17, 0x79, 0x78, 0x63, 0x2d, 0x0e,
	0xf1, 0x0d, 0x10, 0xfb, 0x52, 0xda, 0x07, 0x32, 0x5b, 0x7c, 0x98, 0xce, 0xc3, 0xff, 0xe8, 0x00,
	0x82, 0xc9, 0x62, 0x9e, 0x8d, 0x27, 0xd9, 0x32, 0x74, 0xb0, 0xfa, 0xc4, 0xd3, 0x65, 0x3a, 0x9f,
	0xa4, 0xa1, 0x4b, 0x03, 0xf0, 0xb3, 0xf4, 0x6b, 0x16, 0x7a, 0x88, 0xae, 0xa7, 0xb3, 0x34, 0xf4,
	0x69, 0x0f, 0xdc, 0xf1, 0xe7, 0x90, 0xa0, 0xc5, 0x32, 0x5b, 0xf0, 0x34, 0xec, 0xa1, 0x38, 0x5b,
	0x8c, 0xdf, 0x87, 0x67, 0xef, 0x5e, 0xc2, 0x33, 0x2d, 0xf3, 0xc4, 0xc8, 0x32, 0x59, 0x6f, 0x85,
	0x49, 0x6e, 0x65, 0x25, 0xb5, 0x30, 0x32, 0xbf, 0xb1, 0xff, 0xfb, 0x6a, 0xbf, 0xf9, 0xe6, 0xef,
	0x44, 0x51, 0xad, 0x7a, 0xb6, 0x7e, 0xf3, 0x3b, 0x00, 0x00, 0xff, 0xff, 0xae, 0x2e, 0x59, 0x24,
	0x0d, 0x03, 0x00, 0x00,
}
