// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: voip.proto
package red.tel.chat.generated_protobuf;

import android.os.Parcelable;
import com.squareup.wire.AndroidMessage;
import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;
import java.io.IOException;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import okio.ByteString;

public final class Timestamp extends AndroidMessage<Timestamp, Timestamp.Builder> {
  public static final ProtoAdapter<Timestamp> ADAPTER = new ProtoAdapter_Timestamp();

  public static final Parcelable.Creator<Timestamp> CREATOR = AndroidMessage.newCreator(ADAPTER);

  private static final long serialVersionUID = 0L;

  @WireField(
      tag = 1,
      adapter = "red.tel.chat.generated_protobuf.Time#ADAPTER"
  )
  public final Time duration;

  @WireField(
      tag = 2,
      adapter = "red.tel.chat.generated_protobuf.Time#ADAPTER"
  )
  public final Time presentation;

  public Timestamp(Time duration, Time presentation) {
    this(duration, presentation, ByteString.EMPTY);
  }

  public Timestamp(Time duration, Time presentation, ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    this.duration = duration;
    this.presentation = presentation;
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.duration = duration;
    builder.presentation = presentation;
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof Timestamp)) return false;
    Timestamp o = (Timestamp) other;
    return unknownFields().equals(o.unknownFields())
        && Internal.equals(duration, o.duration)
        && Internal.equals(presentation, o.presentation);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + (duration != null ? duration.hashCode() : 0);
      result = result * 37 + (presentation != null ? presentation.hashCode() : 0);
      super.hashCode = result;
    }
    return result;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    if (duration != null) builder.append(", duration=").append(duration);
    if (presentation != null) builder.append(", presentation=").append(presentation);
    return builder.replace(0, 2, "Timestamp{").append('}').toString();
  }

  public static final class Builder extends Message.Builder<Timestamp, Builder> {
    public Time duration;

    public Time presentation;

    public Builder() {
    }

    public Builder duration(Time duration) {
      this.duration = duration;
      return this;
    }

    public Builder presentation(Time presentation) {
      this.presentation = presentation;
      return this;
    }

    @Override
    public Timestamp build() {
      return new Timestamp(duration, presentation, super.buildUnknownFields());
    }
  }

  private static final class ProtoAdapter_Timestamp extends ProtoAdapter<Timestamp> {
    public ProtoAdapter_Timestamp() {
      super(FieldEncoding.LENGTH_DELIMITED, Timestamp.class);
    }

    @Override
    public int encodedSize(Timestamp value) {
      return Time.ADAPTER.encodedSizeWithTag(1, value.duration)
          + Time.ADAPTER.encodedSizeWithTag(2, value.presentation)
          + value.unknownFields().size();
    }

    @Override
    public void encode(ProtoWriter writer, Timestamp value) throws IOException {
      Time.ADAPTER.encodeWithTag(writer, 1, value.duration);
      Time.ADAPTER.encodeWithTag(writer, 2, value.presentation);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public Timestamp decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1;) {
        switch (tag) {
          case 1: builder.duration(Time.ADAPTER.decode(reader)); break;
          case 2: builder.presentation(Time.ADAPTER.decode(reader)); break;
          default: {
            FieldEncoding fieldEncoding = reader.peekFieldEncoding();
            Object value = fieldEncoding.rawProtoAdapter().decode(reader);
            builder.addUnknownField(tag, fieldEncoding, value);
          }
        }
      }
      reader.endMessage(token);
      return builder.build();
    }

    @Override
    public Timestamp redact(Timestamp value) {
      Builder builder = value.newBuilder();
      if (builder.duration != null) builder.duration = Time.ADAPTER.redact(builder.duration);
      if (builder.presentation != null) builder.presentation = Time.ADAPTER.redact(builder.presentation);
      builder.clearUnknownFields();
      return builder.build();
    }
  }
}
