// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: wire.proto
package red.tel.chat.generated_protobuf;

import android.os.Parcelable;
import com.squareup.wire.AndroidMessage;
import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;
import java.io.IOException;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import okio.ByteString;

public final class Load extends AndroidMessage<Load, Load.Builder> {
  public static final ProtoAdapter<Load> ADAPTER = new ProtoAdapter_Load();

  public static final Parcelable.Creator<Load> CREATOR = AndroidMessage.newCreator(ADAPTER);

  private static final long serialVersionUID = 0L;

  public static final ByteString DEFAULT_KEY = ByteString.EMPTY;

  @WireField(
      tag = 1,
      adapter = "com.squareup.wire.ProtoAdapter#BYTES"
  )
  public final ByteString key;

  public Load(ByteString key) {
    this(key, ByteString.EMPTY);
  }

  public Load(ByteString key, ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    this.key = key;
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.key = key;
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof Load)) return false;
    Load o = (Load) other;
    return unknownFields().equals(o.unknownFields())
        && Internal.equals(key, o.key);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + (key != null ? key.hashCode() : 0);
      super.hashCode = result;
    }
    return result;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    if (key != null) builder.append(", key=").append(key);
    return builder.replace(0, 2, "Load{").append('}').toString();
  }

  public static final class Builder extends Message.Builder<Load, Builder> {
    public ByteString key;

    public Builder() {
    }

    public Builder key(ByteString key) {
      this.key = key;
      return this;
    }

    @Override
    public Load build() {
      return new Load(key, super.buildUnknownFields());
    }
  }

  private static final class ProtoAdapter_Load extends ProtoAdapter<Load> {
    public ProtoAdapter_Load() {
      super(FieldEncoding.LENGTH_DELIMITED, Load.class);
    }

    @Override
    public int encodedSize(Load value) {
      return ProtoAdapter.BYTES.encodedSizeWithTag(1, value.key)
          + value.unknownFields().size();
    }

    @Override
    public void encode(ProtoWriter writer, Load value) throws IOException {
      ProtoAdapter.BYTES.encodeWithTag(writer, 1, value.key);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public Load decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1;) {
        switch (tag) {
          case 1: builder.key(ProtoAdapter.BYTES.decode(reader)); break;
          default: {
            FieldEncoding fieldEncoding = reader.peekFieldEncoding();
            Object value = fieldEncoding.rawProtoAdapter().decode(reader);
            builder.addUnknownField(tag, fieldEncoding, value);
          }
        }
      }
      reader.endMessage(token);
      return builder.build();
    }

    @Override
    public Load redact(Load value) {
      Builder builder = value.newBuilder();
      builder.clearUnknownFields();
      return builder.build();
    }
  }
}
