// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: voip.proto
package red.tel.chat.generated_protobuf;

import android.os.Parcelable;
import com.squareup.wire.AndroidMessage;
import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;
import java.io.IOException;
import java.lang.Boolean;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import okio.ByteString;

public final class Call extends AndroidMessage<Call, Call.Builder> {
  public static final ProtoAdapter<Call> ADAPTER = new ProtoAdapter_Call();

  public static final Parcelable.Creator<Call> CREATOR = AndroidMessage.newCreator(ADAPTER);

  private static final long serialVersionUID = 0L;

  public static final String DEFAULT_KEY = "";

  public static final String DEFAULT_TO = "";

  public static final String DEFAULT_FROM = "";

  public static final Boolean DEFAULT_AUDIO = false;

  public static final Boolean DEFAULT_VIDEO = false;

  @WireField(
      tag = 1,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String key;

  @WireField(
      tag = 2,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String to;

  @WireField(
      tag = 3,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String from;

  @WireField(
      tag = 4,
      adapter = "com.squareup.wire.ProtoAdapter#BOOL"
  )
  public final Boolean audio;

  @WireField(
      tag = 5,
      adapter = "com.squareup.wire.ProtoAdapter#BOOL"
  )
  public final Boolean video;

  public Call(String key, String to, String from, Boolean audio, Boolean video) {
    this(key, to, from, audio, video, ByteString.EMPTY);
  }

  public Call(String key, String to, String from, Boolean audio, Boolean video,
      ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    this.key = key;
    this.to = to;
    this.from = from;
    this.audio = audio;
    this.video = video;
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.key = key;
    builder.to = to;
    builder.from = from;
    builder.audio = audio;
    builder.video = video;
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof Call)) return false;
    Call o = (Call) other;
    return unknownFields().equals(o.unknownFields())
        && Internal.equals(key, o.key)
        && Internal.equals(to, o.to)
        && Internal.equals(from, o.from)
        && Internal.equals(audio, o.audio)
        && Internal.equals(video, o.video);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + (key != null ? key.hashCode() : 0);
      result = result * 37 + (to != null ? to.hashCode() : 0);
      result = result * 37 + (from != null ? from.hashCode() : 0);
      result = result * 37 + (audio != null ? audio.hashCode() : 0);
      result = result * 37 + (video != null ? video.hashCode() : 0);
      super.hashCode = result;
    }
    return result;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    if (key != null) builder.append(", key=").append(key);
    if (to != null) builder.append(", to=").append(to);
    if (from != null) builder.append(", from=").append(from);
    if (audio != null) builder.append(", audio=").append(audio);
    if (video != null) builder.append(", video=").append(video);
    return builder.replace(0, 2, "Call{").append('}').toString();
  }

  public static final class Builder extends Message.Builder<Call, Builder> {
    public String key;

    public String to;

    public String from;

    public Boolean audio;

    public Boolean video;

    public Builder() {
    }

    public Builder key(String key) {
      this.key = key;
      return this;
    }

    public Builder to(String to) {
      this.to = to;
      return this;
    }

    public Builder from(String from) {
      this.from = from;
      return this;
    }

    public Builder audio(Boolean audio) {
      this.audio = audio;
      return this;
    }

    public Builder video(Boolean video) {
      this.video = video;
      return this;
    }

    @Override
    public Call build() {
      return new Call(key, to, from, audio, video, super.buildUnknownFields());
    }
  }

  private static final class ProtoAdapter_Call extends ProtoAdapter<Call> {
    public ProtoAdapter_Call() {
      super(FieldEncoding.LENGTH_DELIMITED, Call.class);
    }

    @Override
    public int encodedSize(Call value) {
      return ProtoAdapter.STRING.encodedSizeWithTag(1, value.key)
          + ProtoAdapter.STRING.encodedSizeWithTag(2, value.to)
          + ProtoAdapter.STRING.encodedSizeWithTag(3, value.from)
          + ProtoAdapter.BOOL.encodedSizeWithTag(4, value.audio)
          + ProtoAdapter.BOOL.encodedSizeWithTag(5, value.video)
          + value.unknownFields().size();
    }

    @Override
    public void encode(ProtoWriter writer, Call value) throws IOException {
      ProtoAdapter.STRING.encodeWithTag(writer, 1, value.key);
      ProtoAdapter.STRING.encodeWithTag(writer, 2, value.to);
      ProtoAdapter.STRING.encodeWithTag(writer, 3, value.from);
      ProtoAdapter.BOOL.encodeWithTag(writer, 4, value.audio);
      ProtoAdapter.BOOL.encodeWithTag(writer, 5, value.video);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public Call decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1;) {
        switch (tag) {
          case 1: builder.key(ProtoAdapter.STRING.decode(reader)); break;
          case 2: builder.to(ProtoAdapter.STRING.decode(reader)); break;
          case 3: builder.from(ProtoAdapter.STRING.decode(reader)); break;
          case 4: builder.audio(ProtoAdapter.BOOL.decode(reader)); break;
          case 5: builder.video(ProtoAdapter.BOOL.decode(reader)); break;
          default: {
            FieldEncoding fieldEncoding = reader.peekFieldEncoding();
            Object value = fieldEncoding.rawProtoAdapter().decode(reader);
            builder.addUnknownField(tag, fieldEncoding, value);
          }
        }
      }
      reader.endMessage(token);
      return builder.build();
    }

    @Override
    public Call redact(Call value) {
      Builder builder = value.newBuilder();
      builder.clearUnknownFields();
      return builder.build();
    }
  }
}
