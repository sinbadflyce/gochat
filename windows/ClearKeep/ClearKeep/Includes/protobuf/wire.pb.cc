// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: wire.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "wire.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
class ContactDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<Contact>
     _instance;
} _Contact_default_instance_;
class StoreDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<Store>
     _instance;
} _Store_default_instance_;
class LoginDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<Login>
     _instance;
} _Login_default_instance_;
class PlainTextDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<PlainText>
     _instance;
} _PlainText_default_instance_;
class WireDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<Wire>
     _instance;
} _Wire_default_instance_;

namespace protobuf_wire_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[5];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Contact, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Contact, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Contact, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Contact, online_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Contact, devicetoken_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Store, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Store, key_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Login, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Login, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Login, username_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Login, authentoken_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Login, devicetoken_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Login, platform_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlainText, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlainText, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlainText, content_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Wire, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Wire, version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Wire, sessionid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Wire, from_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Wire, to_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Wire, which_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Wire, login_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Wire, contacts_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Wire, store_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Wire, payload_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Wire, plaintext_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(Contact)},
  { 9, -1, sizeof(Store)},
  { 15, -1, sizeof(Login)},
  { 25, -1, sizeof(PlainText)},
  { 32, -1, sizeof(Wire)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_Contact_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Store_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Login_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PlainText_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Wire_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "wire.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 5);
}

}  // namespace
void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _Contact_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_Contact_default_instance_);_Store_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_Store_default_instance_);_Login_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_Login_default_instance_);_PlainText_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_PlainText_default_instance_);_Wire_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_Wire_default_instance_);_Wire_default_instance_._instance.get_mutable()->login_ = const_cast< ::Login*>(
      ::Login::internal_default_instance());
  _Wire_default_instance_._instance.get_mutable()->store_ = const_cast< ::Store*>(
      ::Store::internal_default_instance());
  _Wire_default_instance_._instance.get_mutable()->plaintext_ = const_cast< ::PlainText*>(
      ::PlainText::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
namespace {
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\nwire.proto\"H\n\007Contact\022\n\n\002id\030\001 \001(\t\022\014\n\004n"
      "ame\030\002 \001(\t\022\016\n\006online\030\003 \001(\010\022\023\n\013deviceToken"
      "\030\004 \001(\t\"\024\n\005Store\022\013\n\003key\030\001 \001(\014\"c\n\005Login\022\014\n"
      "\004type\030\001 \001(\r\022\020\n\010userName\030\002 \001(\t\022\023\n\013authenT"
      "oken\030\003 \001(\t\022\023\n\013deviceToken\030\004 \001(\t\022\020\n\010platf"
      "orm\030\005 \001(\t\"*\n\tPlainText\022\014\n\004type\030\001 \001(\r\022\017\n\007"
      "content\030\002 \001(\t\"\211\003\n\004Wire\022\017\n\007version\030\001 \001(\r\022"
      "\021\n\tsessionId\030\002 \001(\t\022\014\n\004from\030\003 \001(\t\022\n\n\002to\030\004"
      " \001(\t\022\032\n\005which\030\005 \001(\0162\013.Wire.Which\022\025\n\005logi"
      "n\030e \001(\0132\006.Login\022\032\n\010contacts\030f \003(\0132\010.Cont"
      "act\022\025\n\005store\030h \001(\0132\006.Store\022\017\n\007payload\030j "
      "\001(\014\022\035\n\tplainText\030k \001(\0132\n.PlainText\"\254\001\n\005W"
      "hich\022\t\n\005LOGIN\020\000\022\014\n\010CONTACTS\020\001\022\014\n\010PRESENC"
      "E\020\002\022\t\n\005STORE\020\003\022\010\n\004LOAD\020\004\022\016\n\nPUBLIC_KEY\020\005"
      "\022\027\n\023PUBLIC_KEY_RESPONSE\020\006\022\r\n\tHANDSHAKE\020\007"
      "\022\013\n\007PAYLOAD\020\010\022\022\n\016LOGIN_RESPONSE\020\t\022\016\n\nPLA"
      "IN_TEXT\020\nB\'\n\037red.tel.chat.generated_prot"
      "obufZ\004mainb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 698);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "wire.proto", &protobuf_RegisterTypes);
}
} // anonymous namespace

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_wire_2eproto

const ::google::protobuf::EnumDescriptor* Wire_Which_descriptor() {
  protobuf_wire_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_wire_2eproto::file_level_enum_descriptors[0];
}
bool Wire_Which_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Wire_Which Wire::LOGIN;
const Wire_Which Wire::CONTACTS;
const Wire_Which Wire::PRESENCE;
const Wire_Which Wire::STORE;
const Wire_Which Wire::LOAD;
const Wire_Which Wire::PUBLIC_KEY;
const Wire_Which Wire::PUBLIC_KEY_RESPONSE;
const Wire_Which Wire::HANDSHAKE;
const Wire_Which Wire::PAYLOAD;
const Wire_Which Wire::LOGIN_RESPONSE;
const Wire_Which Wire::PLAIN_TEXT;
const Wire_Which Wire::Which_MIN;
const Wire_Which Wire::Which_MAX;
const int Wire::Which_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Contact::kIdFieldNumber;
const int Contact::kNameFieldNumber;
const int Contact::kOnlineFieldNumber;
const int Contact::kDeviceTokenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Contact::Contact()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_wire_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Contact)
}
Contact::Contact(const Contact& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.id().size() > 0) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  devicetoken_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.devicetoken().size() > 0) {
    devicetoken_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.devicetoken_);
  }
  online_ = from.online_;
  // @@protoc_insertion_point(copy_constructor:Contact)
}

void Contact::SharedCtor() {
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  devicetoken_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  online_ = false;
  _cached_size_ = 0;
}

Contact::~Contact() {
  // @@protoc_insertion_point(destructor:Contact)
  SharedDtor();
}

void Contact::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  devicetoken_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Contact::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Contact::descriptor() {
  protobuf_wire_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_wire_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Contact& Contact::default_instance() {
  protobuf_wire_2eproto::InitDefaults();
  return *internal_default_instance();
}

Contact* Contact::New(::google::protobuf::Arena* arena) const {
  Contact* n = new Contact;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Contact::Clear() {
// @@protoc_insertion_point(message_clear_start:Contact)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  devicetoken_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  online_ = false;
  _internal_metadata_.Clear();
}

bool Contact::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Contact)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->id().data(), static_cast<int>(this->id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Contact.id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Contact.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool online = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &online_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string deviceToken = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_devicetoken()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->devicetoken().data(), static_cast<int>(this->devicetoken().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Contact.deviceToken"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Contact)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Contact)
  return false;
#undef DO_
}

void Contact::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Contact)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Contact.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Contact.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // bool online = 3;
  if (this->online() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->online(), output);
  }

  // string deviceToken = 4;
  if (this->devicetoken().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->devicetoken().data(), static_cast<int>(this->devicetoken().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Contact.deviceToken");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->devicetoken(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Contact)
}

::google::protobuf::uint8* Contact::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Contact)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Contact.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Contact.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // bool online = 3;
  if (this->online() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->online(), target);
  }

  // string deviceToken = 4;
  if (this->devicetoken().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->devicetoken().data(), static_cast<int>(this->devicetoken().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Contact.deviceToken");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->devicetoken(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Contact)
  return target;
}

size_t Contact::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Contact)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  // string name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string deviceToken = 4;
  if (this->devicetoken().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->devicetoken());
  }

  // bool online = 3;
  if (this->online() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Contact::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Contact)
  GOOGLE_DCHECK_NE(&from, this);
  const Contact* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Contact>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Contact)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Contact)
    MergeFrom(*source);
  }
}

void Contact::MergeFrom(const Contact& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Contact)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id().size() > 0) {

    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.devicetoken().size() > 0) {

    devicetoken_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.devicetoken_);
  }
  if (from.online() != 0) {
    set_online(from.online());
  }
}

void Contact::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Contact)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Contact::CopyFrom(const Contact& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Contact)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Contact::IsInitialized() const {
  return true;
}

void Contact::Swap(Contact* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Contact::InternalSwap(Contact* other) {
  using std::swap;
  id_.Swap(&other->id_);
  name_.Swap(&other->name_);
  devicetoken_.Swap(&other->devicetoken_);
  swap(online_, other->online_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Contact::GetMetadata() const {
  protobuf_wire_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_wire_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Contact

// string id = 1;
void Contact::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Contact::id() const {
  // @@protoc_insertion_point(field_get:Contact.id)
  return id_.GetNoArena();
}
void Contact::set_id(const ::std::string& value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Contact.id)
}
#if LANG_CXX11
void Contact::set_id(::std::string&& value) {
  
  id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Contact.id)
}
#endif
void Contact::set_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Contact.id)
}
void Contact::set_id(const char* value, size_t size) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Contact.id)
}
::std::string* Contact::mutable_id() {
  
  // @@protoc_insertion_point(field_mutable:Contact.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Contact::release_id() {
  // @@protoc_insertion_point(field_release:Contact.id)
  
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Contact::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    
  } else {
    
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:Contact.id)
}

// string name = 2;
void Contact::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Contact::name() const {
  // @@protoc_insertion_point(field_get:Contact.name)
  return name_.GetNoArena();
}
void Contact::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Contact.name)
}
#if LANG_CXX11
void Contact::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Contact.name)
}
#endif
void Contact::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Contact.name)
}
void Contact::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Contact.name)
}
::std::string* Contact::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:Contact.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Contact::release_name() {
  // @@protoc_insertion_point(field_release:Contact.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Contact::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:Contact.name)
}

// bool online = 3;
void Contact::clear_online() {
  online_ = false;
}
bool Contact::online() const {
  // @@protoc_insertion_point(field_get:Contact.online)
  return online_;
}
void Contact::set_online(bool value) {
  
  online_ = value;
  // @@protoc_insertion_point(field_set:Contact.online)
}

// string deviceToken = 4;
void Contact::clear_devicetoken() {
  devicetoken_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Contact::devicetoken() const {
  // @@protoc_insertion_point(field_get:Contact.deviceToken)
  return devicetoken_.GetNoArena();
}
void Contact::set_devicetoken(const ::std::string& value) {
  
  devicetoken_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Contact.deviceToken)
}
#if LANG_CXX11
void Contact::set_devicetoken(::std::string&& value) {
  
  devicetoken_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Contact.deviceToken)
}
#endif
void Contact::set_devicetoken(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  devicetoken_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Contact.deviceToken)
}
void Contact::set_devicetoken(const char* value, size_t size) {
  
  devicetoken_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Contact.deviceToken)
}
::std::string* Contact::mutable_devicetoken() {
  
  // @@protoc_insertion_point(field_mutable:Contact.deviceToken)
  return devicetoken_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Contact::release_devicetoken() {
  // @@protoc_insertion_point(field_release:Contact.deviceToken)
  
  return devicetoken_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Contact::set_allocated_devicetoken(::std::string* devicetoken) {
  if (devicetoken != NULL) {
    
  } else {
    
  }
  devicetoken_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), devicetoken);
  // @@protoc_insertion_point(field_set_allocated:Contact.deviceToken)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Store::kKeyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Store::Store()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_wire_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Store)
}
Store::Store(const Store& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.key().size() > 0) {
    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  // @@protoc_insertion_point(copy_constructor:Store)
}

void Store::SharedCtor() {
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

Store::~Store() {
  // @@protoc_insertion_point(destructor:Store)
  SharedDtor();
}

void Store::SharedDtor() {
  key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Store::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Store::descriptor() {
  protobuf_wire_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_wire_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Store& Store::default_instance() {
  protobuf_wire_2eproto::InitDefaults();
  return *internal_default_instance();
}

Store* Store::New(::google::protobuf::Arena* arena) const {
  Store* n = new Store;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Store::Clear() {
// @@protoc_insertion_point(message_clear_start:Store)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool Store::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Store)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes key = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_key()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Store)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Store)
  return false;
#undef DO_
}

void Store::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Store)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes key = 1;
  if (this->key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->key(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Store)
}

::google::protobuf::uint8* Store::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Store)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes key = 1;
  if (this->key().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->key(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Store)
  return target;
}

size_t Store::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Store)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes key = 1;
  if (this->key().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->key());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Store::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Store)
  GOOGLE_DCHECK_NE(&from, this);
  const Store* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Store>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Store)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Store)
    MergeFrom(*source);
  }
}

void Store::MergeFrom(const Store& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Store)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.key().size() > 0) {

    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
}

void Store::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Store)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Store::CopyFrom(const Store& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Store)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Store::IsInitialized() const {
  return true;
}

void Store::Swap(Store* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Store::InternalSwap(Store* other) {
  using std::swap;
  key_.Swap(&other->key_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Store::GetMetadata() const {
  protobuf_wire_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_wire_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Store

// bytes key = 1;
void Store::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Store::key() const {
  // @@protoc_insertion_point(field_get:Store.key)
  return key_.GetNoArena();
}
void Store::set_key(const ::std::string& value) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Store.key)
}
#if LANG_CXX11
void Store::set_key(::std::string&& value) {
  
  key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Store.key)
}
#endif
void Store::set_key(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Store.key)
}
void Store::set_key(const void* value, size_t size) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Store.key)
}
::std::string* Store::mutable_key() {
  
  // @@protoc_insertion_point(field_mutable:Store.key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Store::release_key() {
  // @@protoc_insertion_point(field_release:Store.key)
  
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Store::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    
  } else {
    
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:Store.key)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Login::kTypeFieldNumber;
const int Login::kUserNameFieldNumber;
const int Login::kAuthenTokenFieldNumber;
const int Login::kDeviceTokenFieldNumber;
const int Login::kPlatformFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Login::Login()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_wire_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Login)
}
Login::Login(const Login& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.username().size() > 0) {
    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
  authentoken_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.authentoken().size() > 0) {
    authentoken_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.authentoken_);
  }
  devicetoken_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.devicetoken().size() > 0) {
    devicetoken_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.devicetoken_);
  }
  platform_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.platform().size() > 0) {
    platform_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.platform_);
  }
  type_ = from.type_;
  // @@protoc_insertion_point(copy_constructor:Login)
}

void Login::SharedCtor() {
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  authentoken_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  devicetoken_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  platform_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_ = 0u;
  _cached_size_ = 0;
}

Login::~Login() {
  // @@protoc_insertion_point(destructor:Login)
  SharedDtor();
}

void Login::SharedDtor() {
  username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  authentoken_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  devicetoken_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  platform_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Login::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Login::descriptor() {
  protobuf_wire_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_wire_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Login& Login::default_instance() {
  protobuf_wire_2eproto::InitDefaults();
  return *internal_default_instance();
}

Login* Login::New(::google::protobuf::Arena* arena) const {
  Login* n = new Login;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Login::Clear() {
// @@protoc_insertion_point(message_clear_start:Login)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  authentoken_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  devicetoken_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  platform_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_ = 0u;
  _internal_metadata_.Clear();
}

bool Login::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Login)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string userName = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_username()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->username().data(), static_cast<int>(this->username().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Login.userName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string authenToken = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_authentoken()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->authentoken().data(), static_cast<int>(this->authentoken().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Login.authenToken"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string deviceToken = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_devicetoken()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->devicetoken().data(), static_cast<int>(this->devicetoken().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Login.deviceToken"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string platform = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_platform()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->platform().data(), static_cast<int>(this->platform().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Login.platform"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Login)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Login)
  return false;
#undef DO_
}

void Login::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Login)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 type = 1;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->type(), output);
  }

  // string userName = 2;
  if (this->username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->username().data(), static_cast<int>(this->username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Login.userName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->username(), output);
  }

  // string authenToken = 3;
  if (this->authentoken().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->authentoken().data(), static_cast<int>(this->authentoken().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Login.authenToken");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->authentoken(), output);
  }

  // string deviceToken = 4;
  if (this->devicetoken().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->devicetoken().data(), static_cast<int>(this->devicetoken().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Login.deviceToken");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->devicetoken(), output);
  }

  // string platform = 5;
  if (this->platform().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->platform().data(), static_cast<int>(this->platform().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Login.platform");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->platform(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Login)
}

::google::protobuf::uint8* Login::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Login)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 type = 1;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->type(), target);
  }

  // string userName = 2;
  if (this->username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->username().data(), static_cast<int>(this->username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Login.userName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->username(), target);
  }

  // string authenToken = 3;
  if (this->authentoken().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->authentoken().data(), static_cast<int>(this->authentoken().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Login.authenToken");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->authentoken(), target);
  }

  // string deviceToken = 4;
  if (this->devicetoken().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->devicetoken().data(), static_cast<int>(this->devicetoken().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Login.deviceToken");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->devicetoken(), target);
  }

  // string platform = 5;
  if (this->platform().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->platform().data(), static_cast<int>(this->platform().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Login.platform");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->platform(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Login)
  return target;
}

size_t Login::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Login)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string userName = 2;
  if (this->username().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->username());
  }

  // string authenToken = 3;
  if (this->authentoken().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->authentoken());
  }

  // string deviceToken = 4;
  if (this->devicetoken().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->devicetoken());
  }

  // string platform = 5;
  if (this->platform().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->platform());
  }

  // uint32 type = 1;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Login::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Login)
  GOOGLE_DCHECK_NE(&from, this);
  const Login* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Login>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Login)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Login)
    MergeFrom(*source);
  }
}

void Login::MergeFrom(const Login& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Login)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.username().size() > 0) {

    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
  if (from.authentoken().size() > 0) {

    authentoken_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.authentoken_);
  }
  if (from.devicetoken().size() > 0) {

    devicetoken_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.devicetoken_);
  }
  if (from.platform().size() > 0) {

    platform_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.platform_);
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
}

void Login::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Login)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Login::CopyFrom(const Login& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Login)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Login::IsInitialized() const {
  return true;
}

void Login::Swap(Login* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Login::InternalSwap(Login* other) {
  using std::swap;
  username_.Swap(&other->username_);
  authentoken_.Swap(&other->authentoken_);
  devicetoken_.Swap(&other->devicetoken_);
  platform_.Swap(&other->platform_);
  swap(type_, other->type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Login::GetMetadata() const {
  protobuf_wire_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_wire_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Login

// uint32 type = 1;
void Login::clear_type() {
  type_ = 0u;
}
::google::protobuf::uint32 Login::type() const {
  // @@protoc_insertion_point(field_get:Login.type)
  return type_;
}
void Login::set_type(::google::protobuf::uint32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:Login.type)
}

// string userName = 2;
void Login::clear_username() {
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Login::username() const {
  // @@protoc_insertion_point(field_get:Login.userName)
  return username_.GetNoArena();
}
void Login::set_username(const ::std::string& value) {
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Login.userName)
}
#if LANG_CXX11
void Login::set_username(::std::string&& value) {
  
  username_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Login.userName)
}
#endif
void Login::set_username(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Login.userName)
}
void Login::set_username(const char* value, size_t size) {
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Login.userName)
}
::std::string* Login::mutable_username() {
  
  // @@protoc_insertion_point(field_mutable:Login.userName)
  return username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Login::release_username() {
  // @@protoc_insertion_point(field_release:Login.userName)
  
  return username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Login::set_allocated_username(::std::string* username) {
  if (username != NULL) {
    
  } else {
    
  }
  username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), username);
  // @@protoc_insertion_point(field_set_allocated:Login.userName)
}

// string authenToken = 3;
void Login::clear_authentoken() {
  authentoken_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Login::authentoken() const {
  // @@protoc_insertion_point(field_get:Login.authenToken)
  return authentoken_.GetNoArena();
}
void Login::set_authentoken(const ::std::string& value) {
  
  authentoken_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Login.authenToken)
}
#if LANG_CXX11
void Login::set_authentoken(::std::string&& value) {
  
  authentoken_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Login.authenToken)
}
#endif
void Login::set_authentoken(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  authentoken_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Login.authenToken)
}
void Login::set_authentoken(const char* value, size_t size) {
  
  authentoken_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Login.authenToken)
}
::std::string* Login::mutable_authentoken() {
  
  // @@protoc_insertion_point(field_mutable:Login.authenToken)
  return authentoken_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Login::release_authentoken() {
  // @@protoc_insertion_point(field_release:Login.authenToken)
  
  return authentoken_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Login::set_allocated_authentoken(::std::string* authentoken) {
  if (authentoken != NULL) {
    
  } else {
    
  }
  authentoken_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), authentoken);
  // @@protoc_insertion_point(field_set_allocated:Login.authenToken)
}

// string deviceToken = 4;
void Login::clear_devicetoken() {
  devicetoken_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Login::devicetoken() const {
  // @@protoc_insertion_point(field_get:Login.deviceToken)
  return devicetoken_.GetNoArena();
}
void Login::set_devicetoken(const ::std::string& value) {
  
  devicetoken_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Login.deviceToken)
}
#if LANG_CXX11
void Login::set_devicetoken(::std::string&& value) {
  
  devicetoken_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Login.deviceToken)
}
#endif
void Login::set_devicetoken(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  devicetoken_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Login.deviceToken)
}
void Login::set_devicetoken(const char* value, size_t size) {
  
  devicetoken_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Login.deviceToken)
}
::std::string* Login::mutable_devicetoken() {
  
  // @@protoc_insertion_point(field_mutable:Login.deviceToken)
  return devicetoken_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Login::release_devicetoken() {
  // @@protoc_insertion_point(field_release:Login.deviceToken)
  
  return devicetoken_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Login::set_allocated_devicetoken(::std::string* devicetoken) {
  if (devicetoken != NULL) {
    
  } else {
    
  }
  devicetoken_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), devicetoken);
  // @@protoc_insertion_point(field_set_allocated:Login.deviceToken)
}

// string platform = 5;
void Login::clear_platform() {
  platform_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Login::platform() const {
  // @@protoc_insertion_point(field_get:Login.platform)
  return platform_.GetNoArena();
}
void Login::set_platform(const ::std::string& value) {
  
  platform_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Login.platform)
}
#if LANG_CXX11
void Login::set_platform(::std::string&& value) {
  
  platform_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Login.platform)
}
#endif
void Login::set_platform(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  platform_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Login.platform)
}
void Login::set_platform(const char* value, size_t size) {
  
  platform_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Login.platform)
}
::std::string* Login::mutable_platform() {
  
  // @@protoc_insertion_point(field_mutable:Login.platform)
  return platform_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Login::release_platform() {
  // @@protoc_insertion_point(field_release:Login.platform)
  
  return platform_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Login::set_allocated_platform(::std::string* platform) {
  if (platform != NULL) {
    
  } else {
    
  }
  platform_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), platform);
  // @@protoc_insertion_point(field_set_allocated:Login.platform)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PlainText::kTypeFieldNumber;
const int PlainText::kContentFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PlainText::PlainText()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_wire_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:PlainText)
}
PlainText::PlainText(const PlainText& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.content().size() > 0) {
    content_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.content_);
  }
  type_ = from.type_;
  // @@protoc_insertion_point(copy_constructor:PlainText)
}

void PlainText::SharedCtor() {
  content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_ = 0u;
  _cached_size_ = 0;
}

PlainText::~PlainText() {
  // @@protoc_insertion_point(destructor:PlainText)
  SharedDtor();
}

void PlainText::SharedDtor() {
  content_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PlainText::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PlainText::descriptor() {
  protobuf_wire_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_wire_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PlainText& PlainText::default_instance() {
  protobuf_wire_2eproto::InitDefaults();
  return *internal_default_instance();
}

PlainText* PlainText::New(::google::protobuf::Arena* arena) const {
  PlainText* n = new PlainText;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PlainText::Clear() {
// @@protoc_insertion_point(message_clear_start:PlainText)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_ = 0u;
  _internal_metadata_.Clear();
}

bool PlainText::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PlainText)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string content = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_content()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->content().data(), static_cast<int>(this->content().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "PlainText.content"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PlainText)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PlainText)
  return false;
#undef DO_
}

void PlainText::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PlainText)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 type = 1;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->type(), output);
  }

  // string content = 2;
  if (this->content().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->content().data(), static_cast<int>(this->content().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "PlainText.content");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->content(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:PlainText)
}

::google::protobuf::uint8* PlainText::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:PlainText)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 type = 1;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->type(), target);
  }

  // string content = 2;
  if (this->content().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->content().data(), static_cast<int>(this->content().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "PlainText.content");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->content(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PlainText)
  return target;
}

size_t PlainText::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PlainText)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string content = 2;
  if (this->content().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->content());
  }

  // uint32 type = 1;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PlainText::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PlainText)
  GOOGLE_DCHECK_NE(&from, this);
  const PlainText* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PlainText>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PlainText)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PlainText)
    MergeFrom(*source);
  }
}

void PlainText::MergeFrom(const PlainText& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PlainText)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.content().size() > 0) {

    content_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.content_);
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
}

void PlainText::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PlainText)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlainText::CopyFrom(const PlainText& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PlainText)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlainText::IsInitialized() const {
  return true;
}

void PlainText::Swap(PlainText* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PlainText::InternalSwap(PlainText* other) {
  using std::swap;
  content_.Swap(&other->content_);
  swap(type_, other->type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PlainText::GetMetadata() const {
  protobuf_wire_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_wire_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PlainText

// uint32 type = 1;
void PlainText::clear_type() {
  type_ = 0u;
}
::google::protobuf::uint32 PlainText::type() const {
  // @@protoc_insertion_point(field_get:PlainText.type)
  return type_;
}
void PlainText::set_type(::google::protobuf::uint32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:PlainText.type)
}

// string content = 2;
void PlainText::clear_content() {
  content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& PlainText::content() const {
  // @@protoc_insertion_point(field_get:PlainText.content)
  return content_.GetNoArena();
}
void PlainText::set_content(const ::std::string& value) {
  
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PlainText.content)
}
#if LANG_CXX11
void PlainText::set_content(::std::string&& value) {
  
  content_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:PlainText.content)
}
#endif
void PlainText::set_content(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PlainText.content)
}
void PlainText::set_content(const char* value, size_t size) {
  
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PlainText.content)
}
::std::string* PlainText::mutable_content() {
  
  // @@protoc_insertion_point(field_mutable:PlainText.content)
  return content_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PlainText::release_content() {
  // @@protoc_insertion_point(field_release:PlainText.content)
  
  return content_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PlainText::set_allocated_content(::std::string* content) {
  if (content != NULL) {
    
  } else {
    
  }
  content_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), content);
  // @@protoc_insertion_point(field_set_allocated:PlainText.content)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Wire::kVersionFieldNumber;
const int Wire::kSessionIdFieldNumber;
const int Wire::kFromFieldNumber;
const int Wire::kToFieldNumber;
const int Wire::kWhichFieldNumber;
const int Wire::kLoginFieldNumber;
const int Wire::kContactsFieldNumber;
const int Wire::kStoreFieldNumber;
const int Wire::kPayloadFieldNumber;
const int Wire::kPlainTextFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Wire::Wire()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_wire_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Wire)
}
Wire::Wire(const Wire& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      contacts_(from.contacts_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  sessionid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sessionid().size() > 0) {
    sessionid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sessionid_);
  }
  from_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.from().size() > 0) {
    from_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.from_);
  }
  to_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.to().size() > 0) {
    to_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.to_);
  }
  payload_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.payload().size() > 0) {
    payload_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.payload_);
  }
  if (from.has_login()) {
    login_ = new ::Login(*from.login_);
  } else {
    login_ = NULL;
  }
  if (from.has_store()) {
    store_ = new ::Store(*from.store_);
  } else {
    store_ = NULL;
  }
  if (from.has_plaintext()) {
    plaintext_ = new ::PlainText(*from.plaintext_);
  } else {
    plaintext_ = NULL;
  }
  ::memcpy(&version_, &from.version_,
    static_cast<size_t>(reinterpret_cast<char*>(&which_) -
    reinterpret_cast<char*>(&version_)) + sizeof(which_));
  // @@protoc_insertion_point(copy_constructor:Wire)
}

void Wire::SharedCtor() {
  sessionid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  from_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  to_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  payload_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&login_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&which_) -
      reinterpret_cast<char*>(&login_)) + sizeof(which_));
  _cached_size_ = 0;
}

Wire::~Wire() {
  // @@protoc_insertion_point(destructor:Wire)
  SharedDtor();
}

void Wire::SharedDtor() {
  sessionid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  from_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  to_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  payload_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete login_;
  if (this != internal_default_instance()) delete store_;
  if (this != internal_default_instance()) delete plaintext_;
}

void Wire::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Wire::descriptor() {
  protobuf_wire_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_wire_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Wire& Wire::default_instance() {
  protobuf_wire_2eproto::InitDefaults();
  return *internal_default_instance();
}

Wire* Wire::New(::google::protobuf::Arena* arena) const {
  Wire* n = new Wire;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Wire::Clear() {
// @@protoc_insertion_point(message_clear_start:Wire)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  contacts_.Clear();
  sessionid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  from_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  to_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  payload_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && login_ != NULL) {
    delete login_;
  }
  login_ = NULL;
  if (GetArenaNoVirtual() == NULL && store_ != NULL) {
    delete store_;
  }
  store_ = NULL;
  if (GetArenaNoVirtual() == NULL && plaintext_ != NULL) {
    delete plaintext_;
  }
  plaintext_ = NULL;
  ::memset(&version_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&which_) -
      reinterpret_cast<char*>(&version_)) + sizeof(which_));
  _internal_metadata_.Clear();
}

bool Wire::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Wire)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 version = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &version_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sessionId = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sessionid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sessionid().data(), static_cast<int>(this->sessionid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Wire.sessionId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string from = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_from()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->from().data(), static_cast<int>(this->from().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Wire.from"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string to = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_to()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->to().data(), static_cast<int>(this->to().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Wire.to"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Wire.Which which = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_which(static_cast< ::Wire_Which >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Login login = 101;
      case 101: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 810 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_login()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .Contact contacts = 102;
      case 102: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 818 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_contacts()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Store store = 104;
      case 104: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 834 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_store()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes payload = 106;
      case 106: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 850 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_payload()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .PlainText plainText = 107;
      case 107: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 858 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_plaintext()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Wire)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Wire)
  return false;
#undef DO_
}

void Wire::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Wire)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 version = 1;
  if (this->version() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->version(), output);
  }

  // string sessionId = 2;
  if (this->sessionid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sessionid().data(), static_cast<int>(this->sessionid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Wire.sessionId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->sessionid(), output);
  }

  // string from = 3;
  if (this->from().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->from().data(), static_cast<int>(this->from().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Wire.from");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->from(), output);
  }

  // string to = 4;
  if (this->to().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->to().data(), static_cast<int>(this->to().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Wire.to");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->to(), output);
  }

  // .Wire.Which which = 5;
  if (this->which() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->which(), output);
  }

  // .Login login = 101;
  if (this->has_login()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      101, *this->login_, output);
  }

  // repeated .Contact contacts = 102;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->contacts_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      102, this->contacts(static_cast<int>(i)), output);
  }

  // .Store store = 104;
  if (this->has_store()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      104, *this->store_, output);
  }

  // bytes payload = 106;
  if (this->payload().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      106, this->payload(), output);
  }

  // .PlainText plainText = 107;
  if (this->has_plaintext()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      107, *this->plaintext_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Wire)
}

::google::protobuf::uint8* Wire::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Wire)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 version = 1;
  if (this->version() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->version(), target);
  }

  // string sessionId = 2;
  if (this->sessionid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sessionid().data(), static_cast<int>(this->sessionid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Wire.sessionId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->sessionid(), target);
  }

  // string from = 3;
  if (this->from().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->from().data(), static_cast<int>(this->from().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Wire.from");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->from(), target);
  }

  // string to = 4;
  if (this->to().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->to().data(), static_cast<int>(this->to().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Wire.to");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->to(), target);
  }

  // .Wire.Which which = 5;
  if (this->which() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      5, this->which(), target);
  }

  // .Login login = 101;
  if (this->has_login()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        101, *this->login_, deterministic, target);
  }

  // repeated .Contact contacts = 102;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->contacts_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        102, this->contacts(static_cast<int>(i)), deterministic, target);
  }

  // .Store store = 104;
  if (this->has_store()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        104, *this->store_, deterministic, target);
  }

  // bytes payload = 106;
  if (this->payload().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        106, this->payload(), target);
  }

  // .PlainText plainText = 107;
  if (this->has_plaintext()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        107, *this->plaintext_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Wire)
  return target;
}

size_t Wire::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Wire)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .Contact contacts = 102;
  {
    unsigned int count = static_cast<unsigned int>(this->contacts_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->contacts(static_cast<int>(i)));
    }
  }

  // string sessionId = 2;
  if (this->sessionid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sessionid());
  }

  // string from = 3;
  if (this->from().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->from());
  }

  // string to = 4;
  if (this->to().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->to());
  }

  // bytes payload = 106;
  if (this->payload().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->payload());
  }

  // .Login login = 101;
  if (this->has_login()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->login_);
  }

  // .Store store = 104;
  if (this->has_store()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->store_);
  }

  // .PlainText plainText = 107;
  if (this->has_plaintext()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->plaintext_);
  }

  // uint32 version = 1;
  if (this->version() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->version());
  }

  // .Wire.Which which = 5;
  if (this->which() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->which());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Wire::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Wire)
  GOOGLE_DCHECK_NE(&from, this);
  const Wire* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Wire>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Wire)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Wire)
    MergeFrom(*source);
  }
}

void Wire::MergeFrom(const Wire& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Wire)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  contacts_.MergeFrom(from.contacts_);
  if (from.sessionid().size() > 0) {

    sessionid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sessionid_);
  }
  if (from.from().size() > 0) {

    from_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.from_);
  }
  if (from.to().size() > 0) {

    to_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.to_);
  }
  if (from.payload().size() > 0) {

    payload_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.payload_);
  }
  if (from.has_login()) {
    mutable_login()->::Login::MergeFrom(from.login());
  }
  if (from.has_store()) {
    mutable_store()->::Store::MergeFrom(from.store());
  }
  if (from.has_plaintext()) {
    mutable_plaintext()->::PlainText::MergeFrom(from.plaintext());
  }
  if (from.version() != 0) {
    set_version(from.version());
  }
  if (from.which() != 0) {
    set_which(from.which());
  }
}

void Wire::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Wire)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Wire::CopyFrom(const Wire& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Wire)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Wire::IsInitialized() const {
  return true;
}

void Wire::Swap(Wire* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Wire::InternalSwap(Wire* other) {
  using std::swap;
  contacts_.InternalSwap(&other->contacts_);
  sessionid_.Swap(&other->sessionid_);
  from_.Swap(&other->from_);
  to_.Swap(&other->to_);
  payload_.Swap(&other->payload_);
  swap(login_, other->login_);
  swap(store_, other->store_);
  swap(plaintext_, other->plaintext_);
  swap(version_, other->version_);
  swap(which_, other->which_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Wire::GetMetadata() const {
  protobuf_wire_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_wire_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Wire

// uint32 version = 1;
void Wire::clear_version() {
  version_ = 0u;
}
::google::protobuf::uint32 Wire::version() const {
  // @@protoc_insertion_point(field_get:Wire.version)
  return version_;
}
void Wire::set_version(::google::protobuf::uint32 value) {
  
  version_ = value;
  // @@protoc_insertion_point(field_set:Wire.version)
}

// string sessionId = 2;
void Wire::clear_sessionid() {
  sessionid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Wire::sessionid() const {
  // @@protoc_insertion_point(field_get:Wire.sessionId)
  return sessionid_.GetNoArena();
}
void Wire::set_sessionid(const ::std::string& value) {
  
  sessionid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Wire.sessionId)
}
#if LANG_CXX11
void Wire::set_sessionid(::std::string&& value) {
  
  sessionid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Wire.sessionId)
}
#endif
void Wire::set_sessionid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  sessionid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Wire.sessionId)
}
void Wire::set_sessionid(const char* value, size_t size) {
  
  sessionid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Wire.sessionId)
}
::std::string* Wire::mutable_sessionid() {
  
  // @@protoc_insertion_point(field_mutable:Wire.sessionId)
  return sessionid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Wire::release_sessionid() {
  // @@protoc_insertion_point(field_release:Wire.sessionId)
  
  return sessionid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Wire::set_allocated_sessionid(::std::string* sessionid) {
  if (sessionid != NULL) {
    
  } else {
    
  }
  sessionid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sessionid);
  // @@protoc_insertion_point(field_set_allocated:Wire.sessionId)
}

// string from = 3;
void Wire::clear_from() {
  from_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Wire::from() const {
  // @@protoc_insertion_point(field_get:Wire.from)
  return from_.GetNoArena();
}
void Wire::set_from(const ::std::string& value) {
  
  from_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Wire.from)
}
#if LANG_CXX11
void Wire::set_from(::std::string&& value) {
  
  from_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Wire.from)
}
#endif
void Wire::set_from(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  from_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Wire.from)
}
void Wire::set_from(const char* value, size_t size) {
  
  from_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Wire.from)
}
::std::string* Wire::mutable_from() {
  
  // @@protoc_insertion_point(field_mutable:Wire.from)
  return from_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Wire::release_from() {
  // @@protoc_insertion_point(field_release:Wire.from)
  
  return from_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Wire::set_allocated_from(::std::string* from) {
  if (from != NULL) {
    
  } else {
    
  }
  from_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from);
  // @@protoc_insertion_point(field_set_allocated:Wire.from)
}

// string to = 4;
void Wire::clear_to() {
  to_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Wire::to() const {
  // @@protoc_insertion_point(field_get:Wire.to)
  return to_.GetNoArena();
}
void Wire::set_to(const ::std::string& value) {
  
  to_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Wire.to)
}
#if LANG_CXX11
void Wire::set_to(::std::string&& value) {
  
  to_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Wire.to)
}
#endif
void Wire::set_to(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  to_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Wire.to)
}
void Wire::set_to(const char* value, size_t size) {
  
  to_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Wire.to)
}
::std::string* Wire::mutable_to() {
  
  // @@protoc_insertion_point(field_mutable:Wire.to)
  return to_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Wire::release_to() {
  // @@protoc_insertion_point(field_release:Wire.to)
  
  return to_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Wire::set_allocated_to(::std::string* to) {
  if (to != NULL) {
    
  } else {
    
  }
  to_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), to);
  // @@protoc_insertion_point(field_set_allocated:Wire.to)
}

// .Wire.Which which = 5;
void Wire::clear_which() {
  which_ = 0;
}
::Wire_Which Wire::which() const {
  // @@protoc_insertion_point(field_get:Wire.which)
  return static_cast< ::Wire_Which >(which_);
}
void Wire::set_which(::Wire_Which value) {
  
  which_ = value;
  // @@protoc_insertion_point(field_set:Wire.which)
}

// .Login login = 101;
bool Wire::has_login() const {
  return this != internal_default_instance() && login_ != NULL;
}
void Wire::clear_login() {
  if (GetArenaNoVirtual() == NULL && login_ != NULL) delete login_;
  login_ = NULL;
}
const ::Login& Wire::login() const {
  const ::Login* p = login_;
  // @@protoc_insertion_point(field_get:Wire.login)
  return p != NULL ? *p : *reinterpret_cast<const ::Login*>(
      &::_Login_default_instance_);
}
::Login* Wire::mutable_login() {
  
  if (login_ == NULL) {
    login_ = new ::Login;
  }
  // @@protoc_insertion_point(field_mutable:Wire.login)
  return login_;
}
::Login* Wire::release_login() {
  // @@protoc_insertion_point(field_release:Wire.login)
  
  ::Login* temp = login_;
  login_ = NULL;
  return temp;
}
void Wire::set_allocated_login(::Login* login) {
  delete login_;
  login_ = login;
  if (login) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Wire.login)
}

// repeated .Contact contacts = 102;
int Wire::contacts_size() const {
  return contacts_.size();
}
void Wire::clear_contacts() {
  contacts_.Clear();
}
const ::Contact& Wire::contacts(int index) const {
  // @@protoc_insertion_point(field_get:Wire.contacts)
  return contacts_.Get(index);
}
::Contact* Wire::mutable_contacts(int index) {
  // @@protoc_insertion_point(field_mutable:Wire.contacts)
  return contacts_.Mutable(index);
}
::Contact* Wire::add_contacts() {
  // @@protoc_insertion_point(field_add:Wire.contacts)
  return contacts_.Add();
}
::google::protobuf::RepeatedPtrField< ::Contact >*
Wire::mutable_contacts() {
  // @@protoc_insertion_point(field_mutable_list:Wire.contacts)
  return &contacts_;
}
const ::google::protobuf::RepeatedPtrField< ::Contact >&
Wire::contacts() const {
  // @@protoc_insertion_point(field_list:Wire.contacts)
  return contacts_;
}

// .Store store = 104;
bool Wire::has_store() const {
  return this != internal_default_instance() && store_ != NULL;
}
void Wire::clear_store() {
  if (GetArenaNoVirtual() == NULL && store_ != NULL) delete store_;
  store_ = NULL;
}
const ::Store& Wire::store() const {
  const ::Store* p = store_;
  // @@protoc_insertion_point(field_get:Wire.store)
  return p != NULL ? *p : *reinterpret_cast<const ::Store*>(
      &::_Store_default_instance_);
}
::Store* Wire::mutable_store() {
  
  if (store_ == NULL) {
    store_ = new ::Store;
  }
  // @@protoc_insertion_point(field_mutable:Wire.store)
  return store_;
}
::Store* Wire::release_store() {
  // @@protoc_insertion_point(field_release:Wire.store)
  
  ::Store* temp = store_;
  store_ = NULL;
  return temp;
}
void Wire::set_allocated_store(::Store* store) {
  delete store_;
  store_ = store;
  if (store) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Wire.store)
}

// bytes payload = 106;
void Wire::clear_payload() {
  payload_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Wire::payload() const {
  // @@protoc_insertion_point(field_get:Wire.payload)
  return payload_.GetNoArena();
}
void Wire::set_payload(const ::std::string& value) {
  
  payload_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Wire.payload)
}
#if LANG_CXX11
void Wire::set_payload(::std::string&& value) {
  
  payload_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Wire.payload)
}
#endif
void Wire::set_payload(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  payload_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Wire.payload)
}
void Wire::set_payload(const void* value, size_t size) {
  
  payload_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Wire.payload)
}
::std::string* Wire::mutable_payload() {
  
  // @@protoc_insertion_point(field_mutable:Wire.payload)
  return payload_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Wire::release_payload() {
  // @@protoc_insertion_point(field_release:Wire.payload)
  
  return payload_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Wire::set_allocated_payload(::std::string* payload) {
  if (payload != NULL) {
    
  } else {
    
  }
  payload_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), payload);
  // @@protoc_insertion_point(field_set_allocated:Wire.payload)
}

// .PlainText plainText = 107;
bool Wire::has_plaintext() const {
  return this != internal_default_instance() && plaintext_ != NULL;
}
void Wire::clear_plaintext() {
  if (GetArenaNoVirtual() == NULL && plaintext_ != NULL) delete plaintext_;
  plaintext_ = NULL;
}
const ::PlainText& Wire::plaintext() const {
  const ::PlainText* p = plaintext_;
  // @@protoc_insertion_point(field_get:Wire.plainText)
  return p != NULL ? *p : *reinterpret_cast<const ::PlainText*>(
      &::_PlainText_default_instance_);
}
::PlainText* Wire::mutable_plaintext() {
  
  if (plaintext_ == NULL) {
    plaintext_ = new ::PlainText;
  }
  // @@protoc_insertion_point(field_mutable:Wire.plainText)
  return plaintext_;
}
::PlainText* Wire::release_plaintext() {
  // @@protoc_insertion_point(field_release:Wire.plainText)
  
  ::PlainText* temp = plaintext_;
  plaintext_ = NULL;
  return temp;
}
void Wire::set_allocated_plaintext(::PlainText* plaintext) {
  delete plaintext_;
  plaintext_ = plaintext;
  if (plaintext) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Wire.plainText)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
